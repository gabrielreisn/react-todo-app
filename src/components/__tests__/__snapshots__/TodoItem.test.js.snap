// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TodoItem /> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoItem />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ForwardRef>
        <Checkbox
          checked={false}
          disabled={false}
          iconStyle={
            Object {
              "fill": "#ed7224",
            }
          }
          labelPosition="right"
          onCheck={[Function]}
          style={
            Object {
              "height": "24px",
              "marginRight": "20px",
              "width": "24px",
            }
          }
        />
        <ForwardRef
          checked={false}
        />
        <IconButton
          disableTouchRipple={false}
          disabled={false}
          iconClassName="material-icons"
          iconStyle={
            Object {
              "iconHoverColor": "#ed7224",
            }
          }
          style={
            Object {
              "margin": "auto",
              "padding": "0px",
            }
          }
          tooltipPosition="bottom-center"
          touch={false}
        >
          clear
        </IconButton>
      </ForwardRef>,
      "containerStyle": Object {
        "marginBottom": "15px",
      },
      "expandable": false,
      "expanded": null,
      "initiallyExpanded": false,
      "style": Object {
        "margin": "auto",
        "width": "75%",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Checkbox
            checked={false}
            disabled={false}
            iconStyle={
              Object {
                "fill": "#ed7224",
              }
            }
            labelPosition="right"
            onCheck={[Function]}
            style={
              Object {
                "height": "24px",
                "marginRight": "20px",
                "width": "24px",
              }
            }
          />,
          <ForwardRef
            checked={false}
          />,
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconClassName="material-icons"
            iconStyle={
              Object {
                "iconHoverColor": "#ed7224",
              }
            }
            style={
              Object {
                "margin": "auto",
                "padding": "0px",
              }
            }
            tooltipPosition="bottom-center"
            touch={false}
          >
            clear
          </IconButton>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": false,
            "disabled": false,
            "iconStyle": Object {
              "fill": "#ed7224",
            },
            "labelPosition": "right",
            "onCheck": [Function],
            "style": Object {
              "height": "24px",
              "marginRight": "20px",
              "width": "24px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "checked": false,
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  flex: 1 1 auto;
  text-decoration: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "clear",
            "disableTouchRipple": false,
            "disabled": false,
            "iconClassName": "material-icons",
            "iconStyle": Object {
              "iconHoverColor": "#ed7224",
            },
            "onClick": undefined,
            "style": Object {
              "margin": "auto",
              "padding": "0px",
            },
            "tooltipPosition": "bottom-center",
            "touch": false,
          },
          "ref": null,
          "rendered": "clear",
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  display: flex;
  align-items: center;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ForwardRef>
          <Checkbox
            checked={false}
            disabled={false}
            iconStyle={
              Object {
                "fill": "#ed7224",
              }
            }
            labelPosition="right"
            onCheck={[Function]}
            style={
              Object {
                "height": "24px",
                "marginRight": "20px",
                "width": "24px",
              }
            }
          />
          <ForwardRef
            checked={false}
          />
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconClassName="material-icons"
            iconStyle={
              Object {
                "iconHoverColor": "#ed7224",
              }
            }
            style={
              Object {
                "margin": "auto",
                "padding": "0px",
              }
            }
            tooltipPosition="bottom-center"
            touch={false}
          >
            clear
          </IconButton>
        </ForwardRef>,
        "containerStyle": Object {
          "marginBottom": "15px",
        },
        "expandable": false,
        "expanded": null,
        "initiallyExpanded": false,
        "style": Object {
          "margin": "auto",
          "width": "75%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Checkbox
              checked={false}
              disabled={false}
              iconStyle={
                Object {
                  "fill": "#ed7224",
                }
              }
              labelPosition="right"
              onCheck={[Function]}
              style={
                Object {
                  "height": "24px",
                  "marginRight": "20px",
                  "width": "24px",
                }
              }
            />,
            <ForwardRef
              checked={false}
            />,
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconClassName="material-icons"
              iconStyle={
                Object {
                  "iconHoverColor": "#ed7224",
                }
              }
              style={
                Object {
                  "margin": "auto",
                  "padding": "0px",
                }
              }
              tooltipPosition="bottom-center"
              touch={false}
            >
              clear
            </IconButton>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": false,
              "disabled": false,
              "iconStyle": Object {
                "fill": "#ed7224",
              },
              "labelPosition": "right",
              "onCheck": [Function],
              "style": Object {
                "height": "24px",
                "marginRight": "20px",
                "width": "24px",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "checked": false,
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "rules": Array [
                  "
  flex: 1 1 auto;
  text-decoration: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.span",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "clear",
              "disableTouchRipple": false,
              "disabled": false,
              "iconClassName": "material-icons",
              "iconStyle": Object {
                "iconHoverColor": "#ed7224",
              },
              "onClick": undefined,
              "style": Object {
                "margin": "auto",
                "padding": "0px",
              },
              "tooltipPosition": "bottom-center",
              "touch": false,
            },
            "ref": null,
            "rendered": "clear",
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  align-items: center;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
